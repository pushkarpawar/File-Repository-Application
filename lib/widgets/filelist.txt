import 'package:amplify_flutter/amplify.dart';
import 'package:amplify_storage_s3/amplify_storage_s3.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:fstore/models/fileclass.dart';
import 'package:intl/intl.dart';
import 'package:flutter_downloader/flutter_downloader.dart';
import 'package:path_provider/path_provider.dart';
import 'package:permission_handler/permission_handler.dart';
import 'package:share/share.dart';
class Filelist extends StatelessWidget {

  final List<files_Updater> files;
  Filelist(this.files);

 // ignore: non_constant_identifier_names
 Future<void> Download(String name, String url)
 async {
   final status = Permission.storage.request();
    if(status.isGranted != null){
      final externalDir = await getExternalStorageDirectory();
     FlutterDownloader.enqueue(
     url: url, 
     savedDir: externalDir.path,
     fileName: name,
      showNotification: true,
      openFileFromNotification: true,
     );
    }
    else{
      print("Permision Denied");
    }
   
 }

  Future<void> listallfiles() async {
            try {
                // ignore: unused_local_variable
                ListResult res = await Amplify.Storage.list();
                print("Listed All Files");
              } catch (e) {
                print(e.toString());
              }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: ListView(
              children: [
              Column(
                children: files.map((e) {
                 return Card(
                   elevation: 10.0,
                      color: Colors.amber,
                      margin: EdgeInsets.fromLTRB(15, 10, 15, 0),
                      child: Container(
                        alignment: Alignment.center,
                        child: Column(
                          children: [
                            Row(
                              children: [
                                Column(
                                  children: [
                                    Container(
                                      margin:
                                          EdgeInsets.fromLTRB(10, 10, 10, 10),
                                      child: Image.asset("images/abc.png", height: 40, width: 40,)
                                    )
                                  ],
                                ),
                                Column(
                                  children: [
                                    Row(
                                      mainAxisAlignment:
                                          MainAxisAlignment.start,
                                      children: [
                                        Container(
                                          alignment: Alignment.centerLeft,
                                          width: 250,
                                          child: Text(
                                            e.name,
                                            style: TextStyle(
                                                fontSize: 17,
                                                fontWeight: FontWeight.bold),
                                          ),
                                        )
                                      ],
                                    ),
                                    Row(
                                      children: [
                                        Container(
                                          width: 250,
                                          alignment: Alignment.centerLeft,
                                          child: Text(DateFormat.yMEd()
                                              .add_jms()
                                              .format(DateTime.now())
                                              .toString()),
                                        )
                                      ],
                                    ),
                                  ],
                                ),
                                Column(
                                  children: [
                                    Container(
                                      child: Builder(
                                          builder: (mycontext) => IconButton(
                                              icon: Icon(Icons.more_vert),
                                              onPressed: () {
                                                showModalBottomSheet(
                                                    context: mycontext,
                                                    builder: (builder) {
                                                      return new Container(
                                                        child: new Wrap(
                                                          children: <Widget>[
                                                            new ListTile(
                                                                leading: new Icon(
                                                                    Icons.open_in_browser, color: Colors.black),
                                                                title: new Text(
                                                                    'Open', style: TextStyle(fontWeight: FontWeight.bold)),
                                                                onTap: () =>
                                                                    {}),
                                                            new ListTile(
                                                              leading: new Icon(
                                                                  Icons.download_outlined, color: Colors.black),
                                                              title: new Text(
                                                                  'Download', style: TextStyle(fontWeight: FontWeight.bold)),
                                                              onTap: () => {
                                                                Download(e.name, e.url)
                                                              },
                                                            ),
                                                            new ListTile(
                                                              leading: new Icon(
                                                                  Icons.share_sharp, color: Colors.black),
                                                              title: new Text(
                                                                  'Share', style: TextStyle(fontWeight: FontWeight.bold)),
                                                              onTap: () => {
                                                                share(context,e.url)
                                                              },
                                                            ),
                                                          ],
                                                        ),
                                                      );
                                                    });
                                              })),
                                    )
                                  ],
                                )
                              ],
                            )
                          ],
                        ),
                      ));}).toList()
                
              ),
            ],     
      ),
    );
  }
  void share(BuildContext context, String url){
    final RenderBox box = context.findRenderObject();
    final String text = url;
    Share.share(text, subject: "CLOUDFIREFILESHARING", sharePositionOrigin: box.localToGlobal(Offset.zero) & box.size,);
  }
}